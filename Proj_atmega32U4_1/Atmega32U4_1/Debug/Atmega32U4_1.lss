
Atmega32U4_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000019a  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000019a  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000001c9  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c76  00000000  00000000  000001f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009a8  00000000  00000000  00000e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001d6  00000000  00000000  00001815  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000019ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000371  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001d81  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000116  00000116  0000018a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d94  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    00000002  0000011e  0000011e  00000192  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__dummy_fini 00000002  00000120  00000120  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_funcs_on_exit 00000002  00000122  00000122  00000196  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_simulator_exit 00000002  00000124  00000124  00000198  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.exit    00000016  00000100  00000100  00000174  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text._Exit   00000004  0000011a  0000011a  0000018e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	ec ea       	ldi	r30, 0xAC	; 172
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	40 e0       	ldi	r20, 0x00	; 0
  be:	17 c0       	rjmp	.+46     	; 0xee <__do_clear_bss+0x8>
  c0:	b5 91       	lpm	r27, Z+
  c2:	a5 91       	lpm	r26, Z+
  c4:	35 91       	lpm	r19, Z+
  c6:	25 91       	lpm	r18, Z+
  c8:	05 91       	lpm	r16, Z+
  ca:	07 fd       	sbrc	r16, 7
  cc:	0c c0       	rjmp	.+24     	; 0xe6 <__do_clear_bss>
  ce:	95 91       	lpm	r25, Z+
  d0:	85 91       	lpm	r24, Z+
  d2:	ef 01       	movw	r28, r30
  d4:	f9 2f       	mov	r31, r25
  d6:	e8 2f       	mov	r30, r24
  d8:	05 90       	lpm	r0, Z+
  da:	0d 92       	st	X+, r0
  dc:	a2 17       	cp	r26, r18
  de:	b3 07       	cpc	r27, r19
  e0:	d9 f7       	brne	.-10     	; 0xd8 <__do_copy_data+0x20>
  e2:	fe 01       	movw	r30, r28
  e4:	04 c0       	rjmp	.+8      	; 0xee <__do_clear_bss+0x8>

000000e6 <__do_clear_bss>:
  e6:	1d 92       	st	X+, r1
  e8:	a2 17       	cp	r26, r18
  ea:	b3 07       	cpc	r27, r19
  ec:	e1 f7       	brne	.-8      	; 0xe6 <__do_clear_bss>
  ee:	ec 3a       	cpi	r30, 0xAC	; 172
  f0:	f4 07       	cpc	r31, r20
  f2:	31 f7       	brne	.-52     	; 0xc0 <__do_copy_data+0x8>
  f4:	0e 94 8f 00 	call	0x11e	; 0x11e <main>
  f8:	0c 94 80 00 	jmp	0x100	; 0x100 <_etext>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>

Disassembly of section .text:

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

0000011e <main>:
#include <string.h>
#include "explode.h"
#include "keypad.h"

int main(void)
{
 11e:	ff cf       	rjmp	.-2      	; 0x11e <main>

Disassembly of section .text.__dummy_fini:

00000120 <_fini>:
 120:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000122 <__funcs_on_exit>:
 122:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000124 <__simulator_exit>:
 124:	08 95       	ret

Disassembly of section .text.exit:

00000100 <exit>:
 100:	ec 01       	movw	r28, r24
 102:	0e 94 91 00 	call	0x122	; 0x122 <__funcs_on_exit>
 106:	0e 94 90 00 	call	0x120	; 0x120 <_fini>
 10a:	ce 01       	movw	r24, r28
 10c:	0e 94 92 00 	call	0x124	; 0x124 <__simulator_exit>
 110:	ce 01       	movw	r24, r28
 112:	0e 94 8d 00 	call	0x11a	; 0x11a <_Exit>

Disassembly of section .text._Exit:

0000011a <_Exit>:
 11a:	0e 94 7e 00 	call	0xfc	; 0xfc <_exit>
